genes[grep("^IL3", genes)]
wassim = c("IL1A","IL1B","IL2","IL3","IL4","IL5","IL6","IL7","IL8","IL9","IL10","IL12A.IL12B","IL15","IL16","IL17A","IL17F","IL18","IL21","IL22","IL23","IL25","IL27","IL34","IL35", "IFNG","TNF","LTA","TGFB1","TGFB2","TGFB3", "GZMA","GZMB","CSF1","CSF2","CSF3")
(wassim1 = wassim[wassim %in% genes])
(wassim2 = wassim[! wassim %in% genes])
(wassim1 = wassim[wassim %in% genes])
fit.p[wassim1]
ids = names(which(fit.p < 0.05))
ids
ids = names(which(fit.p[wassim1] < 0.05))
ids
fit1
fit[[1]]
grp = m_sub$g2
fit = apply(csf.df, 2, function(x) summary(aov(x ~ grp)))
fit.p = sapply(fit, function(x) x[[1]]$`Pr(>F)`[1])
(ids = names(which(fit.p[wassim1] < 0.05)))
fit[[1]]
fit = fit[[id[1]]]
fit = fit[[ids[1]]]
fit
tukey = TukeyHSD(fit)$grp
y <- csf.df[id[1]]
y <- csf.df[ids[1]]
fit <- aov(y ~ grp)
y <- as.matrixcsf.df[ids[1]])
fit <- aov(y ~ grp)
y
y <- as.matrix(csf.df)[, ids[1]])
y <- as.matrix(csf.df)[, ids[1]]
y
fit <- aov(y ~ grp)
tukey = TukeyHSD(fit)$grp
tukey
out = data.frame(Comparison = rownames(tukey), Difference = tukey[, "diff"], adj.P = tukey[, "p adj"])
out
out$Comparison = gsub("-", " versus ", out$Comparison)
out$Comparison = gsub("Ctl_1", "Younger_Controls", out$Comparison)
out$Comparison = gsub("AD_1", "Moderate_AD", out$Comparison)
out
rm(list = ls())
options(stringsAsFactors = F)
.libPaths("C:/Users/esi16740/R/library")
library(xlsx)
library(dplyr)
library(dplyr)
library(reshape2)
library(ggplot2)
library(ape)
library(amap)
load("//eristore03/Department/HBDS/xulong/SOMA/data.rdt")
for(obj in names(data)) assign(obj, data[[obj]])
csf.df = log2(data.frame(row.names = csf.df$Subject_ID, csf.df[-c(1:21)]) + 1)
plasma.df = log2(data.frame(row.names = plasma.df$Subject_ID, plasma.df[-c(1:23)]) + 1)
genes = names(csf.df)
wassim = c("IL1A","IL1B","IL2","IL3","IL4","IL5","IL6","IL7","IL8","IL9","IL10","IL12A.IL12B","IL15","IL16","IL17A","IL17F","IL18","IL21","IL22","IL23","IL25","IL27","IL34","IL35", "IFNG","TNF","LTA","TGFB1","TGFB2","TGFB3", "GZMA","GZMB","CSF1","CSF2","CSF3")
(wassim1 = wassim[wassim %in% genes])
(wassim2 = wassim[! wassim %in% genes])
all(rownames(csf.df) == m_sub$Subject.ID.)
grp = m_sub$g2
fit = apply(csf.df, 2, function(x) summary(aov(x ~ grp)))
fit = apply(csf.df, 2, function(x) summary(aov(x ~ grp)))
fit.p = sapply(fit, function(x) x[[1]]$`Pr(>F)`[1])
(ids = names(which(fit.p[wassim1] < 0.05)))
id = ids[1]
y <- as.matrix(csf.df)[, id]
fit <- aov(y ~ grp)
tukey = TukeyHSD(fit)$grp
out = data.frame(Comparison = rownames(tukey), Difference = tukey[, "diff"], adj.P = tukey[, "p adj"])
out$Comparison = gsub("-", " versus ", out$Comparison)
out$Comparison = gsub("Ctl_1", "Younger_Controls", out$Comparison)
out$Comparison = gsub("AD_1", "Moderate_AD", out$Comparison)
out$Comparison = gsub("AD_2", "Severe_AD", out$Comparison)
out
id
getwd()
file = "//eristore03/Department/HBDS/xulong/SOMA/reports/wassim20170316.xlsx")
file = "//eristore03/Department/HBDS/xulong/SOMA/reports/wassim20170316.xlsx"
file = "//eristore03/Department/HBDS/xulong/SOMA/reports/wassim20170316.xlsx"
write.xlsx(file, sheetName = id, append = T)
write.xlsx(file = file, sheetName = id, append = T)
write.xlsx(out, file = file, sheetName = id, append = T)
for(id in ids) {
y <- as.matrix(csf.df)[, id]
fit <- aov(y ~ grp)
# glht(fit, linfct = mcp(grp = "Tukey"))
tukey = TukeyHSD(fit)$grp
out = data.frame(Comparison = rownames(tukey), Difference = tukey[, "diff"], adj.P = tukey[, "p adj"])
out$Comparison = gsub("-", " versus ", out$Comparison)
out$Comparison = gsub("Ctl_1", "Younger_Controls", out$Comparison)
out$Comparison = gsub("Ctl_2", "Older_Controls", out$Comparison)
out$Comparison = gsub("AD_1", "Moderate_AD", out$Comparison)
out$Comparison = gsub("AD_2", "Severe_AD", out$Comparison)
file = "//eristore03/Department/HBDS/xulong/SOMA/reports/wassim_csf_20170316.xlsx"
write.xlsx(out, file = file, sheetName = id, append = T)
}
all(rownames(plasma.df) == m_sub$Subject.ID.)
grp = m_sub$g2
fit = apply(plasma.df, 2, function(x) summary(aov(x ~ grp)))
fit.p = sapply(fit, function(x) x[[1]]$`Pr(>F)`[1])
(ids = names(which(fit.p[wassim1] < 0.05)))
for(id in ids) {
y <- as.matrix(plasma.df)[, id]
fit <- aov(y ~ grp)
# glht(fit, linfct = mcp(grp = "Tukey"))
tukey = TukeyHSD(fit)$grp
out = data.frame(Comparison = rownames(tukey), Difference = tukey[, "diff"], adj.P = tukey[, "p adj"])
out$Comparison = gsub("-", " versus ", out$Comparison)
out$Comparison = gsub("Ctl_1", "Younger_Controls", out$Comparison)
out$Comparison = gsub("Ctl_2", "Older_Controls", out$Comparison)
out$Comparison = gsub("AD_1", "Moderate_AD", out$Comparison)
out$Comparison = gsub("AD_2", "Severe_AD", out$Comparison)
file = "//eristore03/Department/HBDS/xulong/SOMA/reports/wassim_plasma_20170316.xlsx"
write.xlsx(out, file = file, sheetName = id, append = T)
}
load("//eristore03/Department/HBDS/IGAP/IGAP_stage_1.rdt")
options(stringsAsFactors = F)
pqtl = read.table("//eristore03/Department/HBDS/xulong/CATS/Cytokine/3166-92_1_one.out")
stage1 = stage1[stage1$MarkerName %in% pqtl$V10, ]
pqtl = pqtl[match(stage1$MarkerName, pqtl$V10), ]
head(pqtl)
head(stage1)
.libPaths("C:/Users/esi16740/R/library")
library(ggplot2)
library(ggrepel)
y = data.frame(marker = stage1$MarkerName,
AD = stage1$Beta,
p = stage1$Pvalue,
CD33 = pqtl$V15)
y = y[y$marker %in% c("rs12459419",
"rs12985029",
"rs10421385",
"rs2455069"), ]
y
y = rbind(y, c("rs1710354", -0.0127, 0.4538, -0.3874))
ggplot(y, aes(x = CD33, y = AD)) +
geom_point(aes(size = -log10(p))) +
geom_text_repel(aes(label = marker)) +
theme_bw() + xlab("CD33 protein changes") + ylab("AD susceptibility")
y
str(y)
y = data.frame(marker = stage1$MarkerName,
AD = stage1$Beta,
p = stage1$Pvalue,
CD33 = pqtl$V15)
y = y[y$marker %in% c("rs12459419",
"rs12985029",
"rs10421385",
"rs2455069"), ]
y = rbind(y, data.frame("rs1710354", -0.0127, 0.4538, -0.3874))
y = data.frame(marker = stage1$MarkerName,
AD = stage1$Beta,
p = stage1$Pvalue,
CD33 = pqtl$V15)
y
y = y[y$marker %in% c("rs12459419",
"rs12985029",
"rs10421385",
"rs2455069"), ]
y
y = rbind(y, data.frame(marker = "rs1710354", AD = -0.0127, p = 0.4538, CD33 = -0.3874))
y
str(y)
ggplot(y, aes(x = CD33, y = AD)) +
geom_point(aes(size = -log10(p))) +
geom_text_repel(aes(label = marker)) +
theme_bw() + xlab("CD33 protein changes") + ylab("AD susceptibility")
ggplot(y, aes(x = CD33, y = AD)) +
geom_point(aes(size = -log10(p))) +
geom_text_repel(aes(label = marker)) +
theme_bw() + xlab("Plasma CD33 level (Suhre et al., 2017)") + ylab("AD susceptibility (Lambert et al., 2013)")
.libPaths("C:/Users/esi16740/R/library")
rm(list = ls())
setwd("//eristore03/Department/HBDS/xulong/PEAC/PBMC")
load("//eristore03/Department/HBDS/xulong/PEAC/PBMC/human.rdt")
options(stringsAsFactors = F)
tpm.dt <- human_tpm[apply(human_tpm, 1, function(x) max(x) > 3 & sum(x > 0) > 3), ]
table(human$Treatment)
human$PGE1 = "Vehicle"
human$PGE1 = "Vehicle"
human$PGE1[grep("PGE1", human$Treatment)] = "PGE1-OH-100nM"
human$PGE1[grep("PGE1", human$Treatment)] = "PGE1-OH-100nM"
human$PGE1 = factor(human$PGE1, levels = c("Vehicle", "PGE1-OH-100nM"))
human$dur = gsub("^.*(3h|24h)", "\\1", human$Treatment)
human$dur = gsub("^.*(3h|24h)", "\\1", human$Treatment)
human$dur = factor(human$dur, levels = c("3h", "24h"))
my_graph <- function(geneId) {
graph.dt = mutate(human, value = c(as.matrix(tpm.dt[geneId, ])))
p = ggplot(graph.dt, aes(x = dur, y = value)) +
geom_boxplot(aes(fill = PGE1), width = 0.7) +
scale_fill_manual(values = c("grey30", "firebrick1")) +
theme_bw() + xlab("") + ylab("TPM") + ggtitle(geneId)
print(p)
}
(outliers = tpm.dt[rowMax(as.matrix(tpm.dt)) > 1e4, ] %>% rownames)
library(dplyr)
library(ape)
library(amap)
library(ggplot2)
library(Biobase)
library(reshape2)
my_graph <- function(geneId) {
graph.dt = mutate(human, value = c(as.matrix(tpm.dt[geneId, ])))
p = ggplot(graph.dt, aes(x = dur, y = value)) +
geom_boxplot(aes(fill = PGE1), width = 0.7) +
scale_fill_manual(values = c("grey30", "firebrick1")) +
theme_bw() + xlab("") + ylab("TPM") + ggtitle(geneId)
print(p)
}
(outliers = tpm.dt[rowMax(as.matrix(tpm.dt)) > 1e4, ] %>% rownames)
(outliers = tpm.dt[rowMax(as.matrix(tpm.dt)) > 1e4, ] %>% rownames)
for (geneId in outliers) my_graph(geneId)
my_graph("MT-TA")
outliers
for (geneId in outliers) my_graph(geneId)
my_graph("MT-TA")
my_graph("RPS27")
tpm.dt["MT-TA", ]
tpm.dt["RPS27", ]
tpm.dt <- tpm.dt[! rowMax(as.matrix(tpm.dt)) > 1e4, ]
tpm.dt <- sweep(tpm.dt, 2, colSums(tpm.dt), "/") * 1e6
tpm.dt <- human_tpm[apply(human_tpm, 1, function(x) max(x) > 3 & sum(x > 0) > 3), ]
dt = log2(tpm.dt + 1)
for(i in 1:ncol(dt)) hist(dt[, i], main = names(dt)[i])
groups = factor(human$Treatment)
hc1 <- hcluster(t(dt), method = "pearson", link = "average")
plot(as.phylo(hc1), direction = "downward", tip.col = as.numeric(groups))
dt.ctr <- dt - rowMeans(dt)
dt.svd <- svd(dt.ctr) # SVD
plot(dt.svd$d / sum(dt.svd$d) * 100, type = "b", xlab = "PC", ylab = "variance %")
barplot(dt.svd$v[, 1], col = as.numeric(groups)) # PC1
barplot(dt.svd$v[, 2], col = as.numeric(groups)) # PC2
barplot(dt.svd$v[, 1], col = as.numeric(groups)) # PC1
.libPaths("C:/Users/esi16740/R/library")
library(dplyr)
library(reshape2)
library(VennDiagram)
library(ggplot2)
library(xlsx)
library(Biobase)
library(limma)
library(ggrepel)
rm(list = ls())
load("//eristore03/Department/HBDS/xulong/PEAC/PBMC/human.rdt")
options(stringsAsFactors = F)
tpm.dt <- human_tpm[apply(human_tpm, 1, function(x) max(x) > 3 & sum(x > 0) > 3), ]
tpm.dt <- sweep(tpm.dt, 2, colSums(tpm.dt), "/") * 1e6
dt = log2(tpm.dt + 1)
human$PGE1 = "Vehicle"
human$PGE1[grep("PGE1", human$Treatment)] = "PGE1-OH-100nM"
human$PGE1 = factor(human$PGE1, levels = c("Vehicle", "PGE1-OH-100nM"))
human$dur = gsub("^.*(3h|24h)", "\\1", human$Treatment)
human$Time = gsub("^.*(3h|24h)", "\\1", human$Treatment)
human$Time= factor(human$Time, levels = c("3h", "24h"))
head(human)
human$dur = NULL
head(human)
time = c("3h", "24h")
ebayes.de = lapply(time, function(x) { cat(x, "\n")
y = dt[human$dur == x]
y = y[apply(y, 1, var) > 0 & rowMax(as.matrix(y)) > 3, ]
g = human[human$Time == x, ]
g = factor(g$PGE1, levels = c("Vehicle", "PGE1-OH-100nM"))
design = model.matrix(~ g)
colnames(design)[2] = "PGE1-OH-100nM"
fit <- eBayes(lmFit(y, design))
topTable(fit, adjust = "BH", coef = "PGE1-OH-100nM", number = Inf)
}); names(ebayes.de) = time
x = time[1]
ebayes.de = lapply(time, function(x) { cat(x, "\n")
y = dt[human$Time == x]
y = y[apply(y, 1, var) > 0 & rowMax(as.matrix(y)) > 3, ]
g = human[human$Time == x, ]
g = factor(g$PGE1, levels = c("Vehicle", "PGE1-OH-100nM"))
design = model.matrix(~ g)
colnames(design)[2] = "PGE1-OH-100nM"
fit <- eBayes(lmFit(y, design))
topTable(fit, adjust = "BH", coef = "PGE1-OH-100nM", number = Inf)
}); names(ebayes.de) = time
head(ebayes.de[[1]])
ebayes.genes.adjusted <- lapply(ebayes.de, function(x) rownames(x)[x$adj.P.Val < 0.05])
sapply(ebayes.genes.adjusted, length)
sapply(ebayes.genes.adjusted, rownames)
ebayes.genes.adjusted
do.call(ebayes.genes.adjusted, intersect)
Reduce(intersect, ebayes.genes.adjusted)
ebayes.genes <- lapply(ebayes.de, function(x) rownames(x)[x$P.Value < 0.001])
sapply(ebayes.genes, length)
Reduce(intersect, ebayes.genes)
ebayes.genes.adjusted
y = ebayes.de[[1]]
y = y[x$adj.P.Val < 0.05, ]
y = ebayes.de[[1]]
y = y[x$adj.P.Val < 0.05, ]
y = y[y$adj.P.Val < 0.05, ]
head(y)
y = y[sort(y$logFC), ]
y = y[order(y$logFC), ]
head(y)
x = 1
gdt = ebayes.de[[x]]
gene = rownames(gdt)[gdt$adj.P.Val < 0.05]
gdt$label = rownames(gdt)
gdt$label[! gdt$label %in% gene] = NA
gdt$P0.01 = rownames(gdt) %in% gene
gdt$Q0.05 = rownames(gdt) %in% gene
title = paste0(x, ": N(Q < 0.05) = ", length(gene))
title
gdt$sig = rownames(gdt) %in% gene
title = paste0(x, ": N = ", length(gene))
p = ggplot(gdt, aes(x = logFC, y = -log10(P.Value))) +
geom_point(aes(color = sig)) + geom_text_repel(aes(label = label)) +
scale_color_manual(values = c("grey30", "firebrick1")) +
theme_bw() + ggtitle(title)
print(p)
Reduce(intersect, ebayes.genes.adjusted)
y = ebayes.de[[1]]
y = y[y$adj.P.Val < 0.05, ]
ggplot(y, aes(y = logFC)) + geom_point()
head(y)
y$gene = rownames(y)
ggplot(y, aes(x = gene, y = logFC)) + geom_point()
ggplot(y, aes(x = gene, y = logFC)) + geom_bar(statistics = "identity")
ggplot(y, aes(x = gene, y = logFC)) + geom_bar(stat_count = "identity")
ggplot(y, aes(x = gene, y = logFC)) + geom_line()
ggplot(y, aes(x = gene, y = logFC)) + geom_line()
ggplot(y, aes(x = gene, y = logFC)) + geom_line()
ggplot(y, aes(x = gene, y = logFC)) + geom_line()
ggplot(y, aes(x = gene, y = logFC)) + geom_bar(stat = "identity")
y = y[order(y$logFC), ]
y$gene = factor(rownames(y), levels = rownames(y))
ggplot(y, aes(x = gene, y = logFC)) + geom_bar(stat = "identity")
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(stat = "identity") + theme_bw() + xlab("") + ylab("") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(color = -log10(P.Value)), stat = "identity") + theme_bw() + xlab("") + ylab("") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity") +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
plot(1:10, 1:10)
ebayes.genes <- lapply(ebayes.de, function(x) rownames(x)[x$P.Value < 0.01])
(genes = Reduce(intersect, ebayes.genes))
graph.dt = lapply(ebayes.de, function(x) x[genes, ])
graph.dt = do.call(cbind, graph.dt)
names(graph.dt) = paste0("X.", names(graph.dt))
graph.dt$sign = sign(graph.dt$X.3h.logFC)
# pdf("./pdfs/scatter.pdf", width = 6, height = 5)
ggplot(graph.dt, aes(x = X.3h.logFC, y = X.24h.logFC)) +
geom_point(aes(color = as.factor(sign)), size = 3) +
geom_text_repel(aes(label = rownames(graph.dt), color = as.factor(sign))) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
theme_bw() + xlab("log2FC (3h)") + ylab("log2FC (24h)")
# dev.off()
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity") +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity") +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity") +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity", width = 0.5) +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity", width = 0.5) +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity", width = 0.5) +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity", width = 0.5) +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
unlink('//eristore03/Department/HBDS/xulong/PEAC/PBMC/Markdown/analysis2_cache', recursive = TRUE)
ggplot(y, aes(x = gene, y = logFC)) +
geom_bar(aes(fill = -log10(P.Value)), stat = "identity", width = 0.5) +
theme_bw() + xlab("") + ylab("") +
scale_fill_gradient2(low = "blue", high = "red") +
theme(axis.text.x = element_text(angle = 90))
system("java -version")
R.version()
R.Version()
system("java -version")
rm(list = ls())
options(stringsAsFactors = F)
.libPaths("C:/Users/esi16740/R/library")
library(xlsx)
library(dplyr)
library(reshape2)
library(ggplot2)
library(ape)
library(amap)
load("//eristore03/Department/HBDS/xulong/SOMA/data.rdt")
for(obj in names(data)) assign(obj, data[[obj]])
csf.df = log2(data.frame(row.names = csf.df$Subject_ID, csf.df[-c(1:21)]) + 1)
plasma.df = log2(data.frame(row.names = plasma.df$Subject_ID, plasma.df[-c(1:23)]) + 1)
all(rownames(csf.df) == m_sub$Subject.ID.)
fit = apply(csf.df, 2, function(x) summary(aov(x ~ m_sub$g2)))
fit.p = sapply(fit, function(x) x[[1]]$`Pr(>F)`[1])
ids = names(which(fit.p < 0.05))
tmp = csf.df[, ids]
hc1 = hcluster(tmp, method = "pearson", link = "complete")
hc2 = hcluster(t(tmp), method = "pearson", link = "complete")
colors = c("blue", "red")
plot(as.phylo(hc1), direction = "downward", tip.color = colors[as.numeric(m_sub$g1)])
legend("topright", legend = levels(m_sub$g1), fill = colors)
head(m_sub)
m_sub$g1
m_sub$g3 = paste0(m_sub$g1, c(1:50, 1:50))
m_sub$g3
head(tmp)
rownames(tmp) = m_sub$g3
hc1 = hcluster(tmp, method = "pearson", link = "complete")
hc2 = hcluster(t(tmp), method = "pearson", link = "complete")
plot(as.phylo(hc1), direction = "downward", tip.color = colors[as.numeric(m_sub$g1)])
legend("topright", legend = levels(m_sub$g1), fill = colors)
all(rownames(plasma.df) == m_sub$Subject.ID.)
fit = apply(plasma.df, 2, function(x) summary(aov(x ~ m_sub$g2)))
fit.p = sapply(fit, function(x) x[[1]]$`Pr(>F)`[1])
ids = names(which(fit.p < 0.05))
tmp = plasma.df[, ids]
rownames(tmp3) = rownames(tmp2)
rownames(tmp) = m_sub$g3
hc1 = hcluster(tmp, method = "pearson", link = "complete")
hc2 = hcluster(t(tmp), method = "pearson", link = "complete")
colors = c("blue", "red")
plot(as.phylo(hc1), direction = "downward", tip.color = colors[as.numeric(m_sub$g1)])
legend("topright", legend = levels(m_sub$g1), fill = colors)
.libPaths("C:/Users/esi16740/R/library")
shiny::runApp('//eristore03/Department/HBDS/xulong/NZB18/shiny')
library(ggplot2)
.libPaths("C:/Users/esi16740/R/library")
library(ggplot2)
library(shiny)
library(ggplot2)
.libPaths("C:/Users/esi16740/R/library")
library(shiny)
library(ggplot2)
install.packages("colorspace")
library(ggplot2)
runApp('//eristore03/Department/HBDS/xulong/NZB18/shiny')
runApp('//eristore03/Department/HBDS/xulong/NZB18/shiny')
exp(-0.27)
.libPaths("C:/Users/esi16740/R/library")
options(stringsAsFactors = F)
setwd("//eristore03/Department/HBDS/xulong/CATS/GCTA")
igap = read.table("./IGAP_stage_1.txt")
head(igap)
str(igap)
0.99 - 1.96*0.02551
names(igap) = c("Chr", "Pos", "Marker", "EA", "NEA", "Beta", "SE", "Pvalue")
igap$N = 70000
head(igap)
g1k = read.table("../../1000G/plink.frq")
head(g1k)
g1k = read.table("../../1000G/plink.frq", header = T)
head(g1k)
table(igap$Marker %in% gk1$SNP)
table(igap$Marker %in% g1k$SNP)
g1k = g1k[match(igap$Marker, g1k$SNP), ]
head(g1k)
g1k$A1
igap$EA
head(g1k)
igap$freq = g1k$MAF
head(igap)
table(is.na(igap$freq))
igap = igap[! is.na(igap$freq), ]
igap = read.table("./IGAP_stage_1.txt")
names(igap) = c("Chr", "Pos", "Marker", "EA", "NEA", "b", "se", "p")
head(igap)
igap$N = 70000
g1k = read.table("../../1000G/plink.frq", header = T)
g1k = g1k[match(igap$Marker, g1k$SNP), ]
igap$freq = g1k$MAF
igap = igap[! is.na(igap$freq), ]
head(igap)
igap$b = exp(igap$b)
igap = igap[c("Marker", "EA", "NEA", "freq", "b", "se", "p", "N")]
write.table(igap, file = "input.ma")
write.table(igap, file = "input.ma", quote = F, sep = "\t")
summary(igap$b)
igap[igap$Marker == "rs3865444", ]
write.table(igap, file = "input.ma", quote = F, sep = "\t", row.names = F)
igap$Marker
"rs121459419" %in% igap$Marker
"rs12459419" %in% igap$Marker
library(xlsx)
options(stringsAsFactors = F)
library(ggplot2)
library(reshape2)
library(dplyr)
library(sva)
